/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <string>
/* Header for class com_nd_lib_NdUitilityJni */

#ifndef _Included_com_nd_lib_NdUitilityJni
#define _Included_com_nd_lib_NdUitilityJni

#ifdef __cplusplus
	extern "C" {
#endif

		extern JavaVM *gJavaVM;

		//外部用free 释放返回的内存
		char* getLanguageJNI();
		bool  getSDCardStateJNI();

		//外部用free 释放返回的内存
		char* getAndroidImsi();
		char* getAndroidImei();


		//本地消息通知功能
		//	context ： activity之类的上下文
		//	iconResId ： 显示在消息上图标资源的id
		//	msgTitle ： 消息标题
		//	msgContent ： 消息内容
		//	intentFlag ： intent的类型，如Intent.FLAG_ACTIVITY_SINGLE_TOP|Intent.FLAG_ACTIVITY_CLEAR_TOP
		//	notifyFlag ： 提示的类型，如Notification.FLAG_AUTO_CANCEL
		//	when ： 显示在消息末尾的时间，如System.currentTimeMillis()
		void localNotification(
			jint	iconResId ,
			jstring	msgTitle ,
			jstring msgContent,
			jint 	intentFlag,
			jint	notifyFlag ,
			jlong	when
			);

		JNIEXPORT void JNICALL Java_com_nd_lib_NdUtilityJni_initTest
			(JNIEnv *, jclass);


		JNIEXPORT void  JNICALL Java_com_nd_application_MainApplication_localNotification
			(JNIEnv *env, jobject thiz,
			jint	iconResId ,
			jstring	msgTitle ,
			jstring msgContent,
			jint 	intentFlag,
			jint	notifyFlag ,
			jlong	when
			);


		//
		//	本地消息通知功能
		//
		//	soundName	：声音文件路径
		//	iconResId	：显示在消息上图标资源的id
		//	msgTitle	：消息标题
		//	msgContent	：消息内容
		//	when		：显示在消息末尾的时间戳，如System.currentTimeMillis()
		//	hasAction	：是否振动
		//	repeatInterval	：提示间隔（暂无）
		void scheduleAndroidLocalNotification(std::string strSoundName, int iconResId, std::string strMsgTitle, std::string strMsgContent, double when, unsigned char hasAction, int repeatInterval);
		void cancelAndroidNotification(int id);
		void cancelAndroidNotifications();

		void androidCopyTextToClipBoard(std::string content);
		char* androidGetTextFromClipBoard();

		void androidLaunchApp(std::string packageName);
		void androidInstallPackage(std::string apkFilePath);
		bool androidCheckAppInstalled(std::string packageName, bool bForceUpdate);
		std::string androidGetInstalledApps();

		//void androidRegisterWebviewCallback(int nHandler);
		//void excWebviewCallback(std::string strFun, int code, std::string strParam);

		std::string androidGetCurrentAppId();

		int androidGetActiveNetwork();

		//用于测试scheduleLocalNotification接口
		JNIEXPORT void  JNICALL Java_com_nd_application_MainApplication_scheduleLocalNotification(JNIEnv *env, jobject thiz,
			jstring	soundName,
			jint		iconResId ,
			jstring	msgTitle ,
			jstring	msgContent,
			jlong	when,
			jboolean hasAction,
			jint		repeatInterval
			);

		//用于测试copyTextToClipBoard接口
		JNIEXPORT void JNICALL Java_com_nd_application_MainApplication_copyTextToClipBoard(JNIEnv *env, jobject thiz, jstring content);

		JNIEXPORT void JNICALL Java_org_cocos2dx_lib_WebViewActivity_DoWebviewCallback(JNIEnv * env, jclass thisCls, jint nHandler, jint type, jstring strParam);

#ifdef __cplusplus
	}
#endif



#endif
